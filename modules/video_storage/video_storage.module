<?php

/**
 * Implements hook_storage_core_bridge_field_types().
 */
function video_storage_core_bridge_field_types() {
  return array('video');
}

/**
 * Implements hook_field_create_field().
 */
function video_field_create_field(array $field) {
  if ($field['type'] == 'video') {
    foreach (array('converted', 'thumbnails') as $subfield) {  
      storage_core_bridge_field_selector_create($field['field_name'] . '_' . $subfield);
	}
  }
}

/**
 * Implements hook_field_delete_field().
 */
function video_field_delete_field(array $field) {
  if ($field['type'] == 'video') {
    foreach (array('converted', 'thumbnails') as $subfield) {  
      storage_core_bridge_field_selector_destroy($field['field_name'] . '_' . $subfield);
	}
  }
}

/**
 * Implements hook_stream_wrappers().
 */
function video_stream_wrappers() {
  if (!module_exists('storage_core_bridge')) 
	return;
  $fields = variable_get('storage_core_bridge_fields', array());
  $wrappers = array();

  // Declare hidden scheme for each field that is handled by Core Bridge.
  foreach ($fields as $field) {
	if ($field->type != 'video')
	  continue;	
	foreach (array('converted', 'thumbnails') as $subfield) {
      $wrappers[storage_core_bridge_field_scheme($field) . '-' . $subfield] = array(
        'name' => t("Storage API selector"),
        'class' => 'DrupalStorageStreamWrapper',
        'description' => '',
        'type' => STREAM_WRAPPERS_HIDDEN,
      );
    }
  }

  return $wrappers;
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function video_form_field_ui_field_settings_form_alter(array &$form, array &$form_state) {

  if (!module_exists('storage_core_bridge') || $form['field']['type']['#value'] != 'video') {
    return;
  }

  //Weight fixes
  $i = -6;
  foreach ($form['field']['settings'] as $key => $val) {
    $form['field']['settings'][$key]['#weight'] = $i;
	$i++;
  }
  $form['field']['settings']['uri_scheme']['#weight'] = -10;
  $form['field']['settings']['storage_class']['#weight'] = -9;
  $i = -8;

  // Create selectors for 'subfields'
  foreach (array('converted', 'thumbnails') as $subfield) {
    // Add the option to use Storage API.
    $scheme = storage_core_bridge_field_scheme($form['field']['field_name']['#value'] . '_' . $subfield);
    $form['field']['settings']['uri_scheme_' . $subfield]['#options'][$scheme] = t("Storage class (select below)");

    // Add the class selector widget.
    $form['field']['settings']['storage_class_' . $subfield] =
      storage_core_bridge_field_selector($form['field']['field_name']['#value'] . '_' . $subfield)->formItem();

    $form['field']['settings']['uri_scheme_' . $subfield]['#weight'] = $i;
	$i++;
    $form['field']['settings']['storage_class_' . $subfield]['#weight'] = $i;
	$i++;
  }
  
  $form['#submit'][] = 'video_field_ui_field_settings_form_submit';
}

function video_field_ui_field_settings_form_submit(array $form, array &$form_state) {
  foreach (array('converted', 'thumbnails') as $subfield) {
    storage_core_bridge_field_selector($form['field']['field_name']['#value'] . '_' . $subfield)
      ->submit($form_state['values']['field']['settings']['storage_class_' . $subfield]);
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function video_form_field_ui_field_edit_form_alter(array &$form, array &$form_state) {

  if (!module_exists('storage_core_bridge') || $form['#field']['type'] != 'video') {
    return;
  }

  //Weight fixes
  $i = -6;
  foreach ($form['field']['settings'] as $key => $val) {
    $form['field']['settings'][$key]['#weight'] = $i;
	$i++;
  }
  $form['field']['settings']['uri_scheme']['#weight'] = -10;
  $form['field']['settings']['storage_class']['#weight'] = -9;
  $i = -8;

  // Create selectors for 'subfields'
  foreach (array('converted', 'thumbnails') as $subfield) {
    // Add the option to use Storage API.
    $scheme = storage_core_bridge_field_scheme($form['#field']['field_name'] . '_' . $subfield);
    $form['field']['settings']['uri_scheme_' . $subfield]['#options'][$scheme] = t("Storage class (select below)");

    // Add the class selector widget.
    $form['field']['settings']['storage_class_' . $subfield] =
      storage_core_bridge_field_selector($form['#field']['field_name'] . '_' . $subfield)->formItem();

    $form['field']['settings']['uri_scheme_' . $subfield]['#weight'] = $i;
	$i++;
    $form['field']['settings']['storage_class_' . $subfield]['#weight'] = $i;
	$i++;
  }
  
  $form['#submit'][] = 'video_field_ui_field_edit_form_submit';
}

function video_field_ui_field_edit_form_submit(array $form, array &$form_state) {
  foreach (array('converted', 'thumbnails') as $subfield) {
    storage_core_bridge_field_selector($form['#field']['field_name'] . '_' . $subfield)
      ->submit($form_state['values']['field']['settings']['storage_class_' . $subfield]);
  }
}
